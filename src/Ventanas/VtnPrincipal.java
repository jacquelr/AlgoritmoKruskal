/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ventanas;

import Clases.AlgoritmoKruskal;
import Clases.Arbol;
import Clases.Pintar;
import java.awt.Color;
import java.awt.HeadlessException;
import javax.swing.JOptionPane;

/**
 *
 * @author jacqueline
 */
public class VtnPrincipal extends javax.swing.JFrame {
    Arbol arboles = new Arbol();
    private int limite = 0;
    int n = 0, id, id2;
    private int aristaMayor;

    /**
     * Creates new form VtnPrincipal
     */
    public VtnPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        areaJuego = new javax.swing.JPanel();
        btnKruskal = new javax.swing.JButton();
        txtAcumulado = new javax.swing.JTextField();
        btnIniciar = new javax.swing.JButton();
        lblAlgoritmo = new javax.swing.JLabel();
        lblKruskal = new javax.swing.JLabel();
        lblPeso = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Algoritmo de Kruskal");
        setBackground(new java.awt.Color(252, 241, 255));
        setResizable(false);

        areaJuego.setBackground(new java.awt.Color(255, 255, 255));
        areaJuego.setBounds(new java.awt.Rectangle(210, 10, 770, 520));
        areaJuego.setPreferredSize(new java.awt.Dimension(770, 522));
        areaJuego.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                areaJuegoMousePressed(evt);
            }
        });

        javax.swing.GroupLayout areaJuegoLayout = new javax.swing.GroupLayout(areaJuego);
        areaJuego.setLayout(areaJuegoLayout);
        areaJuegoLayout.setHorizontalGroup(
            areaJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 770, Short.MAX_VALUE)
        );
        areaJuegoLayout.setVerticalGroup(
            areaJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 522, Short.MAX_VALUE)
        );

        btnKruskal.setBackground(new java.awt.Color(195, 178, 200));
        btnKruskal.setFont(new java.awt.Font("Hoefler Text", 1, 18)); // NOI18N
        btnKruskal.setText("Aplicar Kruskal");
        btnKruskal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKruskalActionPerformed(evt);
            }
        });

        txtAcumulado.setFont(new java.awt.Font("American Typewriter", 0, 18)); // NOI18N
        txtAcumulado.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnIniciar.setBackground(new java.awt.Color(217, 204, 221));
        btnIniciar.setFont(new java.awt.Font("Hoefler Text", 0, 14)); // NOI18N
        btnIniciar.setText("Iniciar de nuevo");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        lblAlgoritmo.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        lblAlgoritmo.setText("A L G O R I T M O");

        lblKruskal.setFont(new java.awt.Font("Rockwell", 0, 24)); // NOI18N
        lblKruskal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblKruskal.setText("DE KRUSKAL");

        lblPeso.setFont(new java.awt.Font("ITF Devanagari", 0, 18)); // NOI18N
        lblPeso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPeso.setText("Peso Acumulado:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblKruskal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(lblAlgoritmo))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(btnKruskal)))
                                .addGap(0, 11, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblPeso)
                                        .addGap(49, 49, 49))
                                    .addComponent(txtAcumulado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnIniciar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(areaJuego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(lblAlgoritmo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblKruskal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnKruskal, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(lblPeso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAcumulado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(areaJuego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void R_repaint(int limite, Arbol arboles) {//pinta lo q esta antes en el panel 
        for (int j = 0; j < limite; j++) {
            for (int k = 0; k < limite; k++) {
                if (arboles.getmAdyacencia(j, k) == 1) {
                    Pintar.pintarLinea(areaJuego.getGraphics(), arboles.getCordeX(j), arboles.getCordeY(j), arboles.getCordeX(k), arboles.getCordeY(k), arboles.getmCoeficiente(j, k));
                }
            }
        }
        for (int j = 0; j < limite; j++) {
            Pintar.pintarCirculo(areaJuego.getGraphics(), arboles.getCordeX(j), arboles.getCordeY(j), String.valueOf(arboles.getNombre(j)));
        }

    }

    public int ingresarPeso() {
        int peso = 0;
        try {
            peso = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el peso de la arista."));
            if (peso < 1) {
                JOptionPane.showMessageDialog(null, "Debe Ingresar un TamaÃ±o Aceptado..");
                peso = ingresarPeso();//no es nesario hacer esto
            }
        } catch (HeadlessException | NumberFormatException ex) {
            peso = ingresarPeso();
        }
        return peso;
    }

    public boolean cicDerechoSobreNodo(int xxx, int yyy) {
        for (int j = 0; j < limite; j++) {
            if ((xxx + 2) > arboles.getCordeX(j) && xxx < (arboles.getCordeX(j) + 13) && (yyy + 2) > arboles.getCordeY(j) && yyy < (arboles.getCordeY(j) + 13)) {
                if (n == 0) {
                    id = j;
                    R_repaint(limite, arboles);
                    Pintar.clickSobreNodo(areaJuego.getGraphics(), arboles.getCordeX(j), arboles.getCordeY(j), null, Color.MAGENTA);
                    n++;
                } else {
                    id2 = j;
                    n++;
                    Pintar.clickSobreNodo(areaJuego.getGraphics(), arboles.getCordeX(j), arboles.getCordeY(j), null, Color.MAGENTA);
                    if (id == id2) {// si id == id2 por q se volvio a dar click sobre el mismos nodo, se cancela el click anterio
                        n = 0;
                        Pintar.pintarCirculo(areaJuego.getGraphics(), arboles.getCordeX(id), arboles.getCordeY(id), String.valueOf(arboles.getNombre(id)));
                        id = -1;
                        id2 = -1;
                    }
                }
                return true;
            }
        }
        return false;
    }

    private void btnKruskalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKruskalActionPerformed
        if (limite < 1)
            JOptionPane.showMessageDialog(null, "No ha creado ningÃºn nodo.");
        else {
            AlgoritmoKruskal kruskal = new AlgoritmoKruskal(arboles, limite, aristaMayor);
            kruskal.algoritmo();
            txtAcumulado.setText("" + kruskal.getAcumulado());
        }
    }//GEN-LAST:event_btnKruskalActionPerformed

    private void areaJuegoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_areaJuegoMousePressed
        int xxx, yyy;
        xxx = evt.getX();
        yyy = evt.getY();
        if (evt.isMetaDown()) {
            JOptionPane.showMessageDialog(this, "ERROR");
        } else {
            if (!cicDerechoSobreNodo(xxx, yyy)) {// si  clik sobre  nodo es falso entra
                if (limite < 50) {
                    arboles.setCordeX(limite, xxx);
                    arboles.setCordeY(limite, yyy);
                    arboles.setNombre(limite, limite);
                    Pintar.pintarCirculo(areaJuego.getGraphics(), arboles.getCordeX(limite), arboles.getCordeY(limite), String.valueOf(arboles.getNombre(limite)));
                    limite++;
                } else {
                    JOptionPane.showMessageDialog(null, "Se ha llegado al Maximo de nodos..");
                }
            }
            if (n == 2) {
                n = 0;
                int ta = ingresarPeso();
                if (aristaMayor < ta) {
                    aristaMayor = ta;
                }
                arboles.setmAdyacencia(id2, id, 1);
                arboles.setmAdyacencia(id, id2, 1);
                arboles.setmCoeficiente(id2, id, ta);
                arboles.setmCoeficiente(id, id2, ta);
                Pintar.pintarLinea(areaJuego.getGraphics(), arboles.getCordeX(id), arboles.getCordeY(id), arboles.getCordeX(id2), arboles.getCordeY(id2), ta);
                Pintar.pintarCirculo(areaJuego.getGraphics(), arboles.getCordeX(id), arboles.getCordeY(id), String.valueOf(arboles.getNombre(id)));
                Pintar.pintarCirculo(areaJuego.getGraphics(), arboles.getCordeX(id2), arboles.getCordeY(id2), String.valueOf(arboles.getNombre(id2)));
                id = -1;
                id2 = -1;
            }
        }
    }//GEN-LAST:event_areaJuegoMousePressed

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        for (int j = 0; j < limite; j++) {
            arboles.setCordeX(j,0);
            arboles.setCordeY(j,0);              
            arboles.setNombre(j,0);            
        }
         for (int j = 0; j < limite; j++) {
            for (int k = 0; k < limite; k++) {
                arboles.setmAdyacencia(j, k, 0);
                arboles.setmCoeficiente(j, k, 0);                 
            }            
        }
        limite=00;   
        areaJuego.repaint();
        txtAcumulado.setText("");
    }//GEN-LAST:event_btnIniciarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VtnPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VtnPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VtnPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VtnPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VtnPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JPanel areaJuego;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnKruskal;
    private javax.swing.JLabel lblAlgoritmo;
    private javax.swing.JLabel lblKruskal;
    private javax.swing.JLabel lblPeso;
    private javax.swing.JTextField txtAcumulado;
    // End of variables declaration//GEN-END:variables
}
